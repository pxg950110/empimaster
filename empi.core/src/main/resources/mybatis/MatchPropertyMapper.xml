<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="empi.core.dao.MatchPropertyMapper">
    <resultMap id="BaseResultMap" type="empi.core.model.MatchProperty">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_by" jdbcType="INTEGER" property="createBy"/>
        <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime"/>
        <result column="update_by" jdbcType="INTEGER" property="updateBy"/>
        <result column="is_deleted" jdbcType="SMALLINT" property="isDeleted"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="value_type" jdbcType="VARCHAR" property="valueType"/>
        <result column="code_system_code" jdbcType="VARCHAR" property="codeSystemCode"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, code, name, create_time, create_by, last_update_time, update_by, is_deleted,
    sort, value_type, code_system_code
    </sql>
    <select id="queryMaxSort">
        select max(sort)
        from match_property
        where is_delete = 0;
    </select>
    <select id="selectByExample" parameterType="empi.core.model.MatchPropertyExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from match_property
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from match_property
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from match_property
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="empi.core.model.MatchPropertyExample">
        delete from match_property
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="empi.core.model.MatchProperty">
        insert into match_property (id, code, name,
                                    create_time, create_by, last_update_time,
                                    update_by, is_deleted, sort,
                                    value_type, code_system_code)
        values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=INTEGER}, #{lastUpdateTime,jdbcType=TIMESTAMP},
                #{updateBy,jdbcType=INTEGER}, #{isDeleted,jdbcType=SMALLINT}, #{sort,jdbcType=INTEGER},
                #{valueType,jdbcType=VARCHAR}, #{codeSystemCode,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="empi.core.model.MatchProperty">
        insert into match_property
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="lastUpdateTime != null">
                last_update_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="valueType != null">
                value_type,
            </if>
            <if test="codeSystemCode != null">
                code_system_code,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=INTEGER},
            </if>
            <if test="lastUpdateTime != null">
                #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=INTEGER},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=SMALLINT},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="valueType != null">
                #{valueType,jdbcType=VARCHAR},
            </if>
            <if test="codeSystemCode != null">
                #{codeSystemCode,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="empi.core.model.MatchPropertyExample" resultType="java.lang.Long">
        select count(*) from match_property
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update match_property
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.code != null">
                code = #{record.code,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createBy != null">
                create_by = #{record.createBy,jdbcType=INTEGER},
            </if>
            <if test="record.lastUpdateTime != null">
                last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateBy != null">
                update_by = #{record.updateBy,jdbcType=INTEGER},
            </if>
            <if test="record.isDeleted != null">
                is_deleted = #{record.isDeleted,jdbcType=SMALLINT},
            </if>
            <if test="record.sort != null">
                sort = #{record.sort,jdbcType=INTEGER},
            </if>
            <if test="record.valueType != null">
                value_type = #{record.valueType,jdbcType=VARCHAR},
            </if>
            <if test="record.codeSystemCode != null">
                code_system_code = #{record.codeSystemCode,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update match_property
        set id = #{record.id,jdbcType=INTEGER},
        code = #{record.code,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        create_by = #{record.createBy,jdbcType=INTEGER},
        last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
        update_by = #{record.updateBy,jdbcType=INTEGER},
        is_deleted = #{record.isDeleted,jdbcType=SMALLINT},
        sort = #{record.sort,jdbcType=INTEGER},
        value_type = #{record.valueType,jdbcType=VARCHAR},
        code_system_code = #{record.codeSystemCode,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="empi.core.model.MatchProperty">
        update match_property
        <set>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=INTEGER},
            </if>
            <if test="lastUpdateTime != null">
                last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=INTEGER},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=SMALLINT},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="valueType != null">
                value_type = #{valueType,jdbcType=VARCHAR},
            </if>
            <if test="codeSystemCode != null">
                code_system_code = #{codeSystemCode,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="empi.core.model.MatchProperty">
        update match_property
        set code             = #{code,jdbcType=VARCHAR},
            name             = #{name,jdbcType=VARCHAR},
            create_time      = #{createTime,jdbcType=TIMESTAMP},
            create_by        = #{createBy,jdbcType=INTEGER},
            last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
            update_by        = #{updateBy,jdbcType=INTEGER},
            is_deleted       = #{isDeleted,jdbcType=SMALLINT},
            sort             = #{sort,jdbcType=INTEGER},
            value_type       = #{valueType,jdbcType=VARCHAR},
            code_system_code = #{codeSystemCode,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>